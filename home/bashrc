eval "$(thefuck --alias)"
# You can use whatever you want as an alias, like for Mondays:
eval "$(thefuck --alias FUCK)"

export PATH="$HOME/.cabal/bin:/opt/cabal/1.20/bin:/opt/ghc/7.10.3/bin:$PATH"
export PATH=~/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:$PATH

# swift language
export PATH=/home/sunjay/Programs/swift/usr/bin/:"${PATH}"

alias haskell=ghci

export WORKON_HOME=.
export PROJECT_HOME=$HOME/Devel
source /usr/local/bin/virtualenvwrapper.sh

export NVM_DIR="/home/sunjay/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# For afterglow xbox controller -- may not necessarily work with multiple controllers (untested), try removing dbus argument if problems
alias afterglowxbox="sudo xboxdrv --detach-kernel-driver --quiet --mimic-xpad -s"

# ssh quick aliases
alias gttt="ssh root@geniustictactoe.com"

# repeat a command over and over again with 2 second sleep
function repeat {
    while true :
        do
            "$@";
            sleep 2;
    done
}

# attempts to fix the problem where the bluetooth turns itself off
# over and over again when something goes wrong
alias fixbluetooth="rfkill list bluetooth && rfkill unblock bluetooth && rfkill list bluetooth"

# Tries to restart cinnamon (use from tty - Ctrl + Alt + F6 or Fn)
# Note: for this to work, run the w command and make sure the DISPLAY number
# in the FROM column is correct
alias restartcinnamon="export DISPLAY=:0.0; cinnamon"

###-begin-npm-completion-###
#
# npm command completion script
#
# Installation: npm completion >> ~/.bashrc  (or ~/.zshrc)
# Or, maybe: npm completion > /usr/local/etc/bash_completion.d/npm
#

if type complete &>/dev/null; then
  _npm_completion () {
    local words cword
    if type _get_comp_words_by_ref &>/dev/null; then
      _get_comp_words_by_ref -n = -n @ -w words -i cword
    else
      cword="$COMP_CWORD"
      words=("${COMP_WORDS[@]}")
    fi

    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$cword" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           npm completion -- "${words[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _npm_completion npm
elif type compdef &>/dev/null; then
  _npm_completion() {
    local si=$IFS
    compadd -- $(COMP_CWORD=$((CURRENT-1)) \
                 COMP_LINE=$BUFFER \
                 COMP_POINT=0 \
                 npm completion -- "${words[@]}" \
                 2>/dev/null)
    IFS=$si
  }
  compdef _npm_completion npm
elif type compctl &>/dev/null; then
  _npm_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       npm completion -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _npm_completion npm
fi
###-end-npm-completion-###

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
